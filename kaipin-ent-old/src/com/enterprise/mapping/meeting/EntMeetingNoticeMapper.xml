<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enterprise.mapper.meeting.EntMeetingNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.enterprise.model.EntMeetingNotice" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="strat_time" property="stratTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="theme_name" property="themeName" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="numbers" property="numbers" jdbcType="VARCHAR" />
    <result column="annex_id" property="annexId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="VARCHAR" />
    <result column="modify_user" property="modifyUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, url, strat_time, end_time, theme_name, detail, numbers, annex_id, 
    create_time, create_user, modify_time, modify_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ent_meeting_notice
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ent_meeting_notice
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.enterprise.model.EntMeetingNotice" >
    insert into ent_meeting_notice (id, company_id, url, 
      strat_time, end_time, theme_name, 
      detail, numbers, annex_id, 
      create_time, create_user, modify_time, 
      modify_user)
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{stratTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{themeName,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{numbers,jdbcType=VARCHAR}, #{annexId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, 
      #{modifyUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.enterprise.model.EntMeetingNotice" >
    insert into ent_meeting_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="stratTime != null" >
        strat_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="themeName != null" >
        theme_name,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="numbers != null" >
        numbers,
      </if>
      <if test="annexId != null" >
        annex_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUser != null" >
        modify_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="stratTime != null" >
        #{stratTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="themeName != null" >
        #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null" >
        #{numbers,jdbcType=VARCHAR},
      </if>
      <if test="annexId != null" >
        #{annexId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUser != null" >
        #{modifyUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.enterprise.model.EntMeetingNotice" >
    update ent_meeting_notice
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="stratTime != null" >
        strat_time = #{stratTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="themeName != null" >
        theme_name = #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null" >
        numbers = #{numbers,jdbcType=VARCHAR},
      </if>
      <if test="annexId != null" >
        annex_id = #{annexId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.enterprise.model.EntMeetingNotice" >
    update ent_meeting_notice
    set company_id = #{companyId,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      strat_time = #{stratTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      theme_name = #{themeName,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      numbers = #{numbers,jdbcType=VARCHAR},
      annex_id = #{annexId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=VARCHAR},
      modify_user = #{modifyUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
<!--   获取list -->
  <select id="getList" resultType="map" parameterType="map">
  	select a.*,b.url annexUrl,b.ip from  
	ent_meeting_notice a 
	LEFT JOIN 
	system_annex b 
	on 
	a.annex_id = b.id 
	WHERE 
	a.company_id = #{companyId,jdbcType=VARCHAR}
  	order by create_time desc
  	limit ${page_start},${page_size}
  </select>
<!--   获取公司所有的宣讲会 -->
  <select id="getListCounts" resultType="map" parameterType="map">
  	select 
  		count(*) counts
  	from 
  		ent_meeting_notice 
  	where 
  		company_id = #{companyId,jdbcType=VARCHAR} 
  	GROUP BY company_id
  </select>
<!--   获取map -->
  <select id="getMap" resultType="map" parameterType="map">
  	select a.*,b.url annexUrl,b.ip from  
	ent_meeting_notice a 
	LEFT JOIN 
	system_annex b 
	on 
	a.annex_id = b.id 
	WHERE a.id = #{meeting,jdbcType=VARCHAR}
  </select>
</mapper>