<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enterprise.mapper.resume.UserEducationBackgroundMapper" >
  <resultMap id="BaseResultMap" type="com.enterprise.model.UserEducationBackground" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="resume_id" property="resumeId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="school_name" property="schoolName" jdbcType="VARCHAR" />
    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
    <result column="is_grad" property="isGrad" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, resume_id, start_time, end_time, degree, school_name, major_name, is_grad, create_time, 
    type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_education_background
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_education_background
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.enterprise.model.UserEducationBackground" >
    insert into user_education_background (id, resume_id, start_time, 
      end_time, degree, school_name, 
      major_name, is_grad, create_time, 
      type)
    values (#{id,jdbcType=VARCHAR}, #{resumeId,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, 
      #{endTime,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR}, 
      #{majorName,jdbcType=VARCHAR}, #{isGrad,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.enterprise.model.UserEducationBackground" >
    insert into user_education_background
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="resumeId != null" >
        resume_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="schoolName != null" >
        school_name,
      </if>
      <if test="majorName != null" >
        major_name,
      </if>
      <if test="isGrad != null" >
        is_grad,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="resumeId != null" >
        #{resumeId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null" >
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="majorName != null" >
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="isGrad != null" >
        #{isGrad,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.enterprise.model.UserEducationBackground" >
    update user_education_background
    <set >
      <if test="resumeId != null" >
        resume_id = #{resumeId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null" >
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="majorName != null" >
        major_name = #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="isGrad != null" >
        is_grad = #{isGrad,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.enterprise.model.UserEducationBackground" >
    update user_education_background
    set resume_id = #{resumeId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      school_name = #{schoolName,jdbcType=VARCHAR},
      major_name = #{majorName,jdbcType=VARCHAR},
      is_grad = #{isGrad,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
<!-- 表数据 -->
  <!--   获取某个简历下的教育情况 -->
  <select id="selectByResumeId" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
  		<include refid="Base_Column_List"></include>
  	from user_education_background 
  	where resume_id = #{resumeId}
  </select>
</mapper>