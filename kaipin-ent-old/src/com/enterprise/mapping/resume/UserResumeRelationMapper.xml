<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enterprise.mapper.resume.UserResumeRelationMapper" >
  <resultMap id="BaseResultMap" type="com.enterprise.model.UserResumeRelation" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="resume_id" property="resumeId" jdbcType="VARCHAR" />
    <result column="postion_id" property="postionId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="times" property="times" jdbcType="INTEGER" />
    <result column="face" property="face" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, resume_id, postion_id, user_id, status, times, face
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_resume_relation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_resume_relation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.enterprise.model.UserResumeRelation" >
    insert into user_resume_relation (id, company_id, resume_id, 
      postion_id, user_id, status, 
      times, face)
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{resumeId,jdbcType=VARCHAR}, 
      #{postionId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{times,jdbcType=INTEGER}, #{face,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.enterprise.model.UserResumeRelation" >
    insert into user_resume_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="resumeId != null" >
        resume_id,
      </if>
      <if test="postionId != null" >
        postion_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="times != null" >
        times,
      </if>
      <if test="face != null" >
        face,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="resumeId != null" >
        #{resumeId,jdbcType=VARCHAR},
      </if>
      <if test="postionId != null" >
        #{postionId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        #{times,jdbcType=INTEGER},
      </if>
      <if test="face != null" >
        #{face,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.enterprise.model.UserResumeRelation" >
    update user_resume_relation
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="resumeId != null" >
        resume_id = #{resumeId,jdbcType=VARCHAR},
      </if>
      <if test="postionId != null" >
        postion_id = #{postionId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        times = #{times,jdbcType=INTEGER},
      </if>
      <if test="face != null" >
        face = #{face,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.enterprise.model.UserResumeRelation" >
    update user_resume_relation
    set company_id = #{companyId,jdbcType=VARCHAR},
      resume_id = #{resumeId,jdbcType=VARCHAR},
      postion_id = #{postionId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      times = #{times,jdbcType=INTEGER},
      face = #{face,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
<!--   更新状态 updateStatus-->
  <update id="updateStatus" parameterType="map" >
	update user_resume_relation as a
	set
	<if test="status != null" ><if test="status != ''" >a.status = #{status,jdbcType=VARCHAR},</if></if>
	<if test="times != null" ><if test="times != ''" >a.times = #{times,jdbcType=VARCHAR},</if></if>
	<if test="face != null" ><if test="face != ''" >a.face = #{face,jdbcType=VARCHAR}</if></if>
  	where
  	a.id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>