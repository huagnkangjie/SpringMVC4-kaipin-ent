<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.user.UserLoginRecordMapper" >
  <resultMap id="BaseResultMap" type="com.model.user.UserLoginRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="login_os" property="loginOs" jdbcType="VARCHAR" />
    <result column="login_type" property="loginType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, ip, place, create_time, login_os, login_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_login_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_login_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.model.user.UserLoginRecord" >
    insert into user_login_record (id, uid, ip, 
      place, create_time, login_os, 
      login_type)
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{place,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{loginOs,jdbcType=VARCHAR}, 
      #{loginType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.user.UserLoginRecord" >
    insert into user_login_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="loginOs != null" >
        login_os,
      </if>
      <if test="loginType != null" >
        login_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="loginOs != null" >
        #{loginOs,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null" >
        #{loginType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.user.UserLoginRecord" >
    update user_login_record
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="loginOs != null" >
        login_os = #{loginOs,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null" >
        login_type = #{loginType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.user.UserLoginRecord" >
    update user_login_record
    set uid = #{uid,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      login_os = #{loginOs,jdbcType=VARCHAR},
      login_type = #{loginType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>