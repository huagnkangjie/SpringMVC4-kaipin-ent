<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.user.UserOauthMapper" >
  <resultMap id="BaseResultMap" type="com.model.user.UserOauth" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="oauth_type" property="oauthType" jdbcType="VARCHAR" />
    <result column="oauth_id" property="oauthId" jdbcType="VARCHAR" />
    <result column="oauth_access_token" property="oauthAccessToken" jdbcType="VARCHAR" />
    <result column="oauth_expires" property="oauthExpires" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, oauth_type, oauth_id, oauth_access_token, oauth_expires
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_oauth
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_oauth
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.model.user.UserOauth" >
    insert into user_oauth (id, uid, oauth_type, 
      oauth_id, oauth_access_token, oauth_expires
      )
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{oauthType,jdbcType=VARCHAR}, 
      #{oauthId,jdbcType=VARCHAR}, #{oauthAccessToken,jdbcType=VARCHAR}, #{oauthExpires,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.user.UserOauth" >
    insert into user_oauth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="oauthType != null" >
        oauth_type,
      </if>
      <if test="oauthId != null" >
        oauth_id,
      </if>
      <if test="oauthAccessToken != null" >
        oauth_access_token,
      </if>
      <if test="oauthExpires != null" >
        oauth_expires,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="oauthType != null" >
        #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null" >
        #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="oauthAccessToken != null" >
        #{oauthAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="oauthExpires != null" >
        #{oauthExpires,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.user.UserOauth" >
    update user_oauth
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="oauthType != null" >
        oauth_type = #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null" >
        oauth_id = #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="oauthAccessToken != null" >
        oauth_access_token = #{oauthAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="oauthExpires != null" >
        oauth_expires = #{oauthExpires,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.user.UserOauth" >
    update user_oauth
    set uid = #{uid,jdbcType=VARCHAR},
      oauth_type = #{oauthType,jdbcType=VARCHAR},
      oauth_id = #{oauthId,jdbcType=VARCHAR},
      oauth_access_token = #{oauthAccessToken,jdbcType=VARCHAR},
      oauth_expires = #{oauthExpires,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>