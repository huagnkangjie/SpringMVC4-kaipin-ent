<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kaipin.student.repository.dao.resume.IUserProfessionalBackgroundDao" >
  <resultMap id="BaseResultMap" type="com.kaipin.student.model.resume.UserProfessionalBackground" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="resume_id" property="resumeId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="employer" property="employer" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="is_work" property="isWork" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, resume_id, start_time, end_time, position, employer, create_time, is_work, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_job_target_background
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_job_target_background
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.kaipin.student.model.resume.UserProfessionalBackground" >
    insert into user_job_target_background (id, resume_id, start_time, 
      end_time, position, employer, 
      create_time, is_work, type
      )
    values (#{id,jdbcType=VARCHAR}, #{resumeId,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, 
      #{endTime,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{employer,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{isWork,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kaipin.student.model.resume.UserProfessionalBackground" >
    insert into user_job_target_background
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="resumeId != null" >
        resume_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="employer != null" >
        employer,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isWork != null" >
        is_work,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="resumeId != null" >
        #{resumeId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="employer != null" >
        #{employer,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isWork != null" >
        #{isWork,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaipin.student.model.resume.UserProfessionalBackground" >
    update user_job_target_background
    <set >
      <if test="resumeId != null" >
        resume_id = #{resumeId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="employer != null" >
        employer = #{employer,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isWork != null" >
        is_work = #{isWork,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaipin.student.model.resume.UserProfessionalBackground" >
    update user_job_target_background
    set resume_id = #{resumeId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      employer = #{employer,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      is_work = #{isWork,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
<!--   表数据 -->
<!--   获取某个简历下的职业情况 -->
  <select id="selectByResumeId" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
  		<include refid="Base_Column_List"></include>
  	from user_job_target_background 
  	where resume_id = #{resumeId}
  </select>
</mapper>